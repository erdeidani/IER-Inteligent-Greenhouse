import jason.asSyntax.ASSyntax;import jason.asSyntax.Literal;import jason.asSyntax.Structure;import jason.environment.Environment;public class Example extends Environment {	Literal c = Literal.parseLiteral("cold");	Literal w = Literal.parseLiteral("warm");	int temp, prevTemp;	Literal asd = Literal.parseLiteral("warm");	@Override	public void init(String[] args) {		super.init(args);		addPercept(c); // initial perception: cold		Literal t = ASSyntax.createLiteral("temp",ASSyntax.createNumber(temp));		addPercept(t);		temp = 0;		prevTemp = 0;	}	@Override	public boolean executeAction(String agName, Structure action) {		//clearPercepts();		prevTemp = temp;		if (action.getFunctor().equals("increase")) {			temp++;		}		if (action.getFunctor().equals("decrease")) {			temp--;		}				if(temp == 5 ) {			clearPercepts();			//addPercept(c);			//return true;		}		if(temp == 0 ) {			//clearPercepts();			addPercept(c);			//return true;		}		/*		else if(temp >= 5 && prevTemp < 5){			clearPercepts();			addPercept(w);			//return true;		}*/								Literal t = ASSyntax.createLiteral("temp",ASSyntax.createNumber(temp));		Literal p = ASSyntax.createLiteral("temp",ASSyntax.createNumber(prevTemp));		removePercept("temp", p);		addPercept(t);		        informAgsEnvironmentChanged();		return true;	}	private void updatePercepts() {		clearPercepts();		// Add current agent location as a percept		// Literal at = ASSyntax.createLiteral("at(loc)");		// addPercept(at);	}}