import jason.asSyntax.ASSyntax;import jason.asSyntax.Literal;import jason.asSyntax.Structure;import jason.environment.Environment;import java.util.Random;public class Example extends Environment {	Literal c = Literal.parseLiteral("cold");	Literal h = Literal.parseLiteral("hot");	Literal g = Literal.parseLiteral("good");		Literal d = Literal.parseLiteral("dry");	Literal m = Literal.parseLiteral("moist");	Literal t, w;	int temp, water, humi;	TimeThread time;		Random rand = new Random();	@Override	public void init(String[] args) {		super.init(args);		addPercept(h); // initial perception: hot				temp = rand.nextInt(-5, 10);		water = 0;//rand.nextInt(0 , 10);		//start time		time = new TimeThread();		time.start();				updatePercepts();	}{}	@Override	public boolean executeAction(String agName, Structure action) {				if (action.getFunctor().equals("increase")) {			time.increaseTemp();		}		if (action.getFunctor().equals("decrease")) {			time.increaseTemp();		}		if (action.getFunctor().equals("restart")) {			//temp = rand.nextInt(-5, 10);		}		if (action.getFunctor().equals("water")) {			water++; 		}		updatePercepts();			        informAgsEnvironmentChanged();		return true;	}	private void updatePercepts() {		temp = TimeThread.temperature;		System.out.println("temperature: " + temp);				if( temp > 4 ) {			clearTempPercepts();			addPercept(h);		}		else if( temp < 2 ) {			clearTempPercepts();			addPercept(c);		}		else {			clearTempPercepts();			addPercept(g);		}		/*		if(water < 7 ) {			clearPercepts();			addPercept(d);		}		else {			clearPercepts();			addPercept(m);		}*/				removePercept("temp", t);		t = ASSyntax.createLiteral("temp",ASSyntax.createNumber(temp));		addPercept(t);				removePercept("water", w);		w = ASSyntax.createLiteral("water",ASSyntax.createNumber(water));		addPercept(w);			}		private void clearTempPercepts(){		removePercept(c);		removePercept(h);		removePercept(g);	}		private void clearWaterPercepts(){		removePercept(m);		removePercept(d);	}}